Class {
	#name : #IceTipRemoteActionBrowser,
	#superclass : #IceTipHistoryActionBrowser,
	#instVars : [
		'remotePanel'
	],
	#category : #'Iceberg-TipUI-View-Repository'
}

{ #category : #commands }
IceTipRemoteActionBrowser class >> buildSelectionCommandGroupWith: presenter for: aCommandGroup [

	"No commands to add"
]

{ #category : #'instance creation' }
IceTipRemoteActionBrowser class >> onRepositoryModel: aRepository [
	^ self subclassResponsibility
]

{ #category : #layout }
IceTipRemoteActionBrowser >> defaultLayout [

	^ SpBoxLayout newTopToBottom
		  add: (SpBoxLayout newLeftToRight 
				add: remotePanel label ;
				add: remotePanel;
				yourself) expand: false;
		  add: commitsPanel withConstraints: [ :c | c spec: #panelSpec ];
		  add: actionButtonBar expand: false;
		  yourself
]

{ #category : #initialization }
IceTipRemoteActionBrowser >> initializePresenters [

	super initializePresenters.
	remotePanel := self
		instantiate: IceTipSelectRemotePresenter
		on: self model.
	remotePanel label: self labelForRemotePanel.
	remotePanel remoteList
		whenSelectedItemChangedDo: [ :remoteModel | self moveToRemote: remoteModel ].

]

{ #category : #initialization }
IceTipRemoteActionBrowser >> initializeWindow: aWindow [

	super initializeWindow: aWindow.
	
	aWindow bindKeyCombination: $s meta toAction: [ self accept ]
]

{ #category : #initialization }
IceTipRemoteActionBrowser >> labelForRemotePanel [

	^ self subclassResponsibility
]

{ #category : #'accessing - ui' }
IceTipRemoteActionBrowser >> mainList [

	^ commitsPanel commitList
]

{ #category : #'accessing - ui' }
IceTipRemoteActionBrowser >> remotePanel [

	^ remotePanel
]

{ #category : #'accessing - ui' }
IceTipRemoteActionBrowser >> remotePanel: aSpPresenter [

	remotePanel := aSpPresenter
]
